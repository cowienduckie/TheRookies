// <auto-generated />
using System;
using BookLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookLibrary.Data.Migrations
{
    [DbContext(typeof(BookLibraryContext))]
    [Migration("20221105150853_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookLibrary.Data.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Book", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cover = "https://dummyimage.com/150x300/",
                            Name = "Harry Potter"
                        },
                        new
                        {
                            Id = 2,
                            Cover = "https://dummyimage.com/150x300/",
                            Name = "Homo Sapiens"
                        },
                        new
                        {
                            Id = 3,
                            Cover = "https://dummyimage.com/150x300/",
                            Name = "Homo Deus"
                        },
                        new
                        {
                            Id = 4,
                            Cover = "https://dummyimage.com/150x300/",
                            Name = "Algorithm"
                        },
                        new
                        {
                            Id = 5,
                            Cover = "https://dummyimage.com/150x300/",
                            Name = "Clean Code"
                        },
                        new
                        {
                            Id = 6,
                            Cover = "https://dummyimage.com/150x300/",
                            Name = "Head First: Design Pattern"
                        });
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BookCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 8,
                            BookId = 4,
                            CategoryId = 2
                        });
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.BorrowRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestedBy")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("RequestedBy");

                    b.ToTable("BorrowRequest", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RequestedAt = new DateTime(2022, 11, 5, 22, 8, 53, 477, DateTimeKind.Local).AddTicks(4828),
                            RequestedBy = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            ApprovedAt = new DateTime(2022, 11, 5, 22, 8, 53, 477, DateTimeKind.Local).AddTicks(4837),
                            ApprovedBy = 3,
                            RequestedAt = new DateTime(2022, 11, 5, 22, 8, 53, 477, DateTimeKind.Local).AddTicks(4836),
                            RequestedBy = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            ApprovedAt = new DateTime(2022, 11, 5, 22, 8, 53, 477, DateTimeKind.Local).AddTicks(4840),
                            ApprovedBy = 4,
                            RequestedAt = new DateTime(2022, 11, 5, 22, 8, 53, 477, DateTimeKind.Local).AddTicks(4840),
                            RequestedBy = 2,
                            Status = 2
                        });
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.BorrowRequestDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("BorrowRequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("BorrowRequestId");

                    b.ToTable("BorrowRequestDetail", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            BorrowRequestId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            BorrowRequestId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            BorrowRequestId = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            BorrowRequestId = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            BorrowRequestId = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            BorrowRequestId = 2
                        },
                        new
                        {
                            Id = 7,
                            BookId = 1,
                            BorrowRequestId = 2
                        },
                        new
                        {
                            Id = 8,
                            BookId = 2,
                            BorrowRequestId = 2
                        },
                        new
                        {
                            Id = 9,
                            BookId = 3,
                            BorrowRequestId = 3
                        },
                        new
                        {
                            Id = 10,
                            BookId = 4,
                            BorrowRequestId = 3
                        });
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Technology"
                        });
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Normal 1",
                            Password = "normie1",
                            Role = 0,
                            Username = "normie1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Normal 2",
                            Password = "normie2",
                            Role = 0,
                            Username = "normie2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Super 1",
                            Password = "supreme2",
                            Role = 1,
                            Username = "supreme1"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Super 2",
                            Password = "supreme2",
                            Role = 1,
                            Username = "supreme1"
                        });
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.BookCategory", b =>
                {
                    b.HasOne("BookLibrary.Data.Entities.Book", "Book")
                        .WithMany("BookCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookLibrary.Data.Entities.Category", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.BorrowRequest", b =>
                {
                    b.HasOne("BookLibrary.Data.Entities.User", "Approver")
                        .WithMany("ApprovedBorrowRequests")
                        .HasForeignKey("ApprovedBy");

                    b.HasOne("BookLibrary.Data.Entities.User", "Requester")
                        .WithMany("RequestedBorrowRequests")
                        .HasForeignKey("RequestedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Requester");
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.BorrowRequestDetail", b =>
                {
                    b.HasOne("BookLibrary.Data.Entities.Book", "Book")
                        .WithMany("BoorBorrowRequestDetails")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookLibrary.Data.Entities.BorrowRequest", "BorrowRequest")
                        .WithMany("BorrowRequestDetails")
                        .HasForeignKey("BorrowRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("BorrowRequest");
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.Book", b =>
                {
                    b.Navigation("BookCategories");

                    b.Navigation("BoorBorrowRequestDetails");
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.BorrowRequest", b =>
                {
                    b.Navigation("BorrowRequestDetails");
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.Category", b =>
                {
                    b.Navigation("BookCategories");
                });

            modelBuilder.Entity("BookLibrary.Data.Entities.User", b =>
                {
                    b.Navigation("ApprovedBorrowRequests");

                    b.Navigation("RequestedBorrowRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
